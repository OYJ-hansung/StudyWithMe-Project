{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","ErrorModal","onCancel","onClear","header","show","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","style","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","PlaceItem","auth","useContext","AuthContext","showDetail","setShowDetail","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","address","src","image","alt","title","code","LoadingSpinner","asOverlay","description","pathname","state","placeId","creatorId","userId","PlaceList","items","length","map","place","creator","coordinates","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","console","log","fetchPlaces","deletedPlaceId","prevPlaces"],"mappings":"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","file":"static/js/6.7768855a.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal /* onSubmit이 없으므로 form이 생성되지 않는다. 단지 오류 메시지를 출력 */\n      onCancel={props.onClear}\n      header=\"오류가 발생했습니다!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]); /* 로딩하는 도중에 페이지를 이동할떄 생기는 오류를 잡기 위함. rerender할때 initialize되는 것을 방지. 즉 비동기 작업을 취소하기 위함 */\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController(); \n      activeHttpRequests.current.push(httpAbortCtrl); /* activeHttpRequests 에 AbortController를 포함 */\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal /* 사용자가 어보트컨트롤러를 사용할 수 있도록 */\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\n// 컴포넌트를 받을 수 있는 틀\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\n// 팝업 창 정의\n\nconst ModalOverlay = props => { /* 폼 제출 양식 정의 */\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment> {/* 여러개의 컴포넌트를 리턴하기 위해 사용  */}\n      {props.show && <Backdrop onClick={props.onCancel} />} \n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\nimport { Link } from 'react-router-dom';\n/* 장소의 정보를 보여주는 페이지 */\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showDetail, setShowDetail] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowDetail(true);\n\n  const closeMapHandler = () => setShowDetail(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal /* 하위 버튼에서 '자세히 보기'을 클릭했을시 show가 true가 되면서 visible */\n        show={showDetail}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <dev>\n            <Button onClick={closeMapHandler}>코멘트 작성</Button>\n            <Button onClick={closeMapHandler}>닫기</Button>\n          </dev>\n      }\n      >\n        <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n        </div>\n        <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <br />\n            <textarea value={props.code}></textarea>\n        </div>\n      </Modal>\n      <Modal /* 하위 버튼에서 삭제을 클릭했을시 showConfirmModal = true가 되면서 visible */\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              취소\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              삭제\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          정말 해당 알고리즘 노트를 지우시겠습니까? 지운 후에는 복구를 할 수 없습니다.\n        </p>\n      </Modal>\n      <li className=\"place-item\"> {/* 본격적인 구체적인 장소에 대한 정보를 표기하는 부분 */}\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse to={{\n                pathname: `/places/specific/${props.id}`,\n                state: {\n                  placeId: props.id,\n                  title: props.title,\n                  code: props.code,\n                  image: props.image,\n                  creatorId: props.creatorId\n                },\n              }} >\n              자세히\n            </Button>         \n      \n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>수정</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                삭제\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          code={place.code}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  // app.js의 http주소로부터 받아온 userid를 불러옴\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n        console.log(responseData);\n        console.log(loadedPlaces);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => { /* 장소 지우기 */\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}