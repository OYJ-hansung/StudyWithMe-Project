{"version":3,"sources":["places/pages/SpecificPlace.js"],"names":["SpecificPlace","userName","window","localStorage","getItem","auth","useContext","AuthContext","location","useLocation","useHttpClient","isLoading","error","sendRequest","clearError","state","placeId","title","code","image","creatorId","useState","loadedComments","setLoadedComments","useForm","comment","value","isValid","formState","inputHandler","commentSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","fetchComments","responseData","comments","console","log","useEffect","Fragment","onClear","className","src","alt","map","index","key","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","disabled"],"mappings":"miNAiHeA,UA9FO,WACpB,IAAMC,EAAWC,OAAOC,aAAaC,QAAQ,YACvCC,EAAOC,qBAAWC,KAClBC,EAAWC,cACjB,EAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAAmDN,EAASO,MAApDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,MAAOC,EAArC,EAAqCA,UACrC,EAA4CC,qBAA5C,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAkCC,YAChC,CACGC,QAAS,CACRC,MAAO,GACPC,SAAS,KAGb,GAPF,mBAAOC,EAAP,KAAkBC,EAAlB,KAUMC,EAAoB,uCAAG,WAAMC,GAAN,8EAC3BA,EAAMC,iBADqB,UAGnBC,EAAW,IAAIC,UACZC,OAAO,UAAWP,EAAUQ,OAAOX,QAAQC,OACpDO,EAASE,OAAO,UAAWnB,GAC3BiB,EAASE,OAAO,YAAaf,GAC7Ba,EAASE,OAAO,WAAYlC,GAPH,SAQnBY,EAAYwB,8CAAuD,OAAQJ,EAAU,CACzFK,cAAe,UAAYjC,EAAKkC,QATT,OAWzBC,IAXyB,4GAAH,sDAiBpBA,EAAa,uCAAG,6GAES3B,EAAY,GAAD,OACjCwB,+BADiC,2BACmBrB,IAHvC,OAEZyB,EAFY,OAKlBlB,EAAkBkB,EAAaC,UACpBD,EAAaC,SACxBC,QAAQC,IAAIH,EAAaC,UAPP,yGAAH,qDAenB,OAJAG,qBAAU,WACRL,MACC,CAAC3B,EAAaG,IAGf,kBAAC,IAAM8B,SAAP,KACE,kBAAC,IAAD,CAAYlC,MAAOA,EAAOmC,QAASjC,IACnC,yBAAKkC,UAAU,aACb,yBAAKA,UAAU,qBACT,yBACEC,IAAG,UAAKZ,2BAAL,YAAwClB,GAC3C+B,IAAKjC,MAIf,yBAAK+B,UAAU,oBACT,4BAAK/B,GACL,6BACA,8BAAU+B,UAAU,kBAAkBtB,MAAOR,MAEjDP,GAAaW,GACb,4BACGA,EAAe6B,KAAI,SAAC1B,EAAS2B,GAC5B,OACA,wBAAIC,IAAKD,GACP,4BAAK3B,EAAQxB,SAAb,KAAyBwB,EAAQA,cAKzC,0BAAMuB,UAAU,sBAAsBM,SAAUxB,GAC7CnB,GAAa,kBAAC,IAAD,CAAgB4C,WAAS,IACvC,kBAAC,IAAD,CACEC,GAAG,UACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,eACNC,WAAY,CAACC,eACbC,UAAU,wEACVC,QAASlC,IAEX,4BAAQmB,UAAU,iBAChB,kBAAC,IAAD,CAAQU,KAAK,SAASM,UAAWpC,EAAUD,SAA3C","file":"static/js/9.e2a0101c.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useLocation } from 'react-router-dom';\nimport './PlaceForm.css';\n\n/* 사용자에 새로운 장소를 추가하는 부분 */\nconst SpecificPlace = () => {\n  const userName = window.localStorage.getItem('userName');\n  const auth = useContext(AuthContext);\n  const location = useLocation();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const { placeId, title, code, image, creatorId } = location.state;\n  const [loadedComments, setLoadedComments] = useState();\n  const [formState, inputHandler] = useForm(\n    {\n       comment: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const commentSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('comment', formState.inputs.comment.value);\n      formData.append('placeId', placeId);\n      formData.append('creatorId', creatorId);\n      formData.append('userName', userName);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places/comment', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      fetchComments();      \n      // location.reload();\n    } catch (err) {}\n  };\n\n  let comments;\n  const fetchComments = async () => {\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/comment/${placeId}`\n      );\n      setLoadedComments(responseData.comments);\n      comments = responseData.comments;\n      console.log(responseData.comments);        \n    } catch (err) {}\n  };\n\n  useEffect(() => {    \n    fetchComments();\n  }, [sendRequest, placeId]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <div className='outer-div'>\n        <div className=\"place-item__image\">\n              <img\n                src={`${process.env.REACT_APP_ASSET_URL}/${image}`}\n                alt={title}\n              />\n        </div>\n      </div>\n      <div className=\"place-item__info\">\n            <h2>{title}</h2>\n            <br />\n            <textarea className='textarea-border' value={code}></textarea>\n      </div>      \n      {!isLoading && loadedComments && (\n        <ul>\n          {loadedComments.map((comment, index)=>{\n            return(\n            <li key={index}>\n              <h2>{comment.userName}: {comment.comment}</h2>             \n            </li>\n            )})}\n        </ul>\n      )}              \n      <form className=\"place-form-specific\" onSubmit={commentSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"comment\"\n          element=\"input\"\n          type=\"text\"\n          label=\"댓글\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"유효한 댓글을 입력하세요.\"\n          onInput={inputHandler}\n        />\n        <footer className='footer-button'>\n          <Button type=\"submit\" disabled={!formState.isValid}>코멘트 작성</Button>       \n        </footer>        \n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default SpecificPlace;\n"],"sourceRoot":""}