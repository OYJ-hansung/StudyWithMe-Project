{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","NavLinksSide","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","SpecificPlace","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.45dace13.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\n//클릭시 캔슬을 정의\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    localStorage.removeItem('userName');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nexport const NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          메인으로\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>나의 노트</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">노트 추가</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">로그인/회원가입</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>로그아웃</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport const NavLinksSide = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links-side\">\n      <li>\n        <NavLink to=\"/\" exact>\n          모든 회원\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>나의 노트</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">노트 추가</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">로그인/회원가입</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>로그아웃</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\n// export default NavLinks;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { NavLinksSide } from './NavLinks';\n\nimport './SideDrawer.css';\nimport './NavLinks.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinksSide />\n        </nav>\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport { NavLinks } from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        {/* <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav> */}\n      </SideDrawer>\n\n      <MainHeader>\n        <div className='menu-btn-combined'>\n          <button\n            className=\"main-navigation__menu-btn\"\n            onClick={openDrawerHandler}\n          >\n            <span />\n            <span />\n            <span />\n          </button>          \n          <h1 className=\"main-navigation__title\"><Link to=\"/\">SWM</Link></h1>\n        </div>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, {Suspense} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\n\n//lazy를 통해서 해당 모듈을 사용할때만 이를 불러오기. 효율적인 속도 향성 방법\nconst Users = React.lazy(()=>import('./user/pages/Users'));\nconst NewPlace = React.lazy(()=>import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(()=>import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(()=>import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(()=>import('./user/pages/Auth'));\nconst SpecificPlace = React.lazy(()=>import('./places/pages/SpecificPlace'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />  {/* 처음 화면 users 탭 > Users.js*/} \n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces /> {/* 사용자에 해당하는 장소 목록 이동 */}\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />  {/* 새로운 장소를 등록 */}\n        </Route>\n        <Route path=\"/places/specific/:placeId\">\n          <SpecificPlace /> {/* 자세히 페이지 */}\n        </Route>   \n        <Route path=\"/places/:placeId\">\n          <UpdatePlace /> {/* 장소를 업데이트 하는 부분 */}\n        </Route>     \n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces /> {/* 빠져도 되지 않나? */}\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main><Suspense fallback={<div className='center'><LoadingSpinner/></div>}>{routes}</Suspense></main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}